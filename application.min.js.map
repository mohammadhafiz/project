{"version":3,"sources":["application.js","en.js","ms.js","login_controller.js","modules_controller.js","api.js","auth.js","error.js","settings.js","user.js"],"names":["application","angular","module","config","$locationProvider","$routeProvider","html5Mode","hashPrefix","when","controller","templateUrl","resolve","guest_only","$q","Auth","deferred","defer","isLogged","reject","promise","member_only","otherwise","redirectTo","$mdThemingProvider","theme","primaryPalette","accentPalette","warnPalette","backgroundPalette","$translateProvider","useSanitizeValueStrategy","preferredLanguage","$httpProvider","defaults","headers","common","Accept","post","Content-Type","put","delete","interceptors","push","run","$location","$rootScope","$on","event","current","previous","rejection","path","translations","action_login","action_logout","label_password","label_username","placeholder","title_access_control","title_arrears_management","title_login","title_modules","title_settings","validation_maxlength_24","validation_minlength_4","validation_required","button_login","$scope","credentials","username","password","login","verify","then","session","$timeout","User","query","limit","users","console","info","logout","forget","factory","Settings","api","access_token","scopes","grants","clients","get","endpoint","host","concat","$http","$window","API","Error","auth","localStorage","removeItem","handler","response","expires_in","data","refresh_token","token_type","handle","hasOwnProperty","refresh","grant_type","client_id","client_secret","scope","join","authInterceptor","request","Authorization","responseError","error","settings","$resource","isArray"],"mappings":"AAAA,GAAAA,aAAAC,QAAAC,OAAA,eACA,YACA,SACA,aACA,kBACA,aACA,aACA,UACA,aACA,yBACA,yBAGAF,aAAAG,QAAA,oBAAA,iBACA,SAAAC,EAAAC,GAEAD,EAAAE,WAAA,GACAC,WAAA,MAEAF,EACAG,KAAA,UACAC,WAAA,kBACAC,YAAA,wBACAC,SACAC,YAAA,KAAA,OAAA,SAAAC,EAAAC,GAEA,GAAAC,GAAAF,EAAAG,OAMA,OALAF,GAAAG,WAGAF,EAAAG,OAAA,cAFAH,EAAAJ,UAIAI,EAAAI,aAIAX,KAAA,YACAC,WAAA,oBACAC,YAAA,0BACAC,SACAS,aAAA,KAAA,OAAA,SAAAP,EAAAC,GAEA,GAAAC,GAAAF,EAAAG,OAMA,OALAF,GAAAG,WACAF,EAAAJ,UAEAI,EAAAG,OAAA,eAEAH,EAAAI,aAIAX,KAAA,sBAEAa,WACAC,WAAA,cAIAtB,YAAAG,QAAA,qBACA,SAAAoB,GAEAA,EAAAC,MAAA,WACAC,eAAA,UACAC,cAAA,QACAC,YAAA,UACAC,kBAAA,QAEAL,EAAAC,MAAA,UACAC,eAAA,UACAC,cAAA,QACAC,YAAA,UACAC,kBAAA,QAEAL,EAAAC,MAAA,oBACAC,eAAA,UACAC,cAAA,QACAC,YAAA,UACAC,kBAAA,aAGA5B,YAAAG,QAAA,qBACA,SAAA0B,GAEAA,EAAAC,yBAAA,YACAD,EAAAE,kBAAA,SAGA/B,YAAAG,QAAA,gBACA,SAAA6B,GAEAA,EAAAC,SAAAC,SACAC,QACAC,OAAA,qCAEAC,MACAC,eAAA,oBAEAC,KACAD,eAAA,oBAEAE,UACAF,eAAA,qBAIAN,EAAAS,aAAAC,KAAA,sBAGA1C,YAAA2C,KAAA,YAAA,aACA,SAAAC,EAAAC,GAEAA,EAAAC,IAAA,oBAAA,SAAAC,EAAAC,EAAAC,EAAAC,GAEA,OAAAA,GACA,IAAA,aACAN,EAAAO,KAAA,WACA,MACA,KAAA,cACAP,EAAAO,KAAA,gBCvHAnD,YAAAG,QAAA,qBACA,SAAA0B,GAEAA,EAAAuB,aAAA,MACAC,aAAA,SACAC,cAAA,UAEAC,eAAA,WACAC,eAAA,WAEAC,YAAA,cAEAC,qBAAA,iBACAC,yBAAA,qBACAC,YAAA,QACAC,cAAA,UACAC,eAAA,WAEAC,wBAAA,oDACAC,uBAAA,4CACAC,oBAAA,+BCpBAjE,YAAAG,QAAA,qBACA,SAAA0B,GAEAA,EAAAuB,aAAA,MACAQ,YAAA,YACAJ,eAAA,YACAD,eAAA,aACAW,aAAA,iBCPAlE,YAAAS,WAAA,mBAAA,YAAA,SAAA,OACA,SAAAmC,EAAAuB,EAAArD,GAEAqD,EAAAC,aACAC,SAAA,GACAC,SAAA,IAGAH,EAAAI,MAAA,SAAAH,GAEAtD,EAAA0D,OAAAJ,GACAK,KAAA,SAAAC,GACA9B,EAAAO,KAAA,kBCZAnD,YAAAS,WAAA,qBAAA,YAAA,SAAA,WAAA,OAAA,OACA,SAAAmC,EAAAuB,EAAAQ,EAAA7D,EAAA8D,GAEAA,EAAAC,OACAC,MAAA,EACAT,SAAA,OACA,SAAAU,GAEAC,QAAAC,KAAAF,KAGAZ,EAAAe,OAAA,WAEAP,EAAA,WAEA7D,EAAAqE,SACAV,KAAA,WAEA7B,EAAAO,KAAA,aAEA,SCpBAnD,YAAAoF,QAAA,OAAA,WACA,SAAAC,GAEA,GAAAC,KAcA,OAZAA,GAAAC,aAAA,oBACAD,EAAAZ,QAAA,eACAY,EAAAP,MAAA,sBACAO,EAAAE,OAAA,uBACAF,EAAAG,OAAA,uBACAH,EAAAI,QAAA,yBAEAJ,EAAAK,IAAA,SAAAC,GAEA,MAAAP,GAAAQ,KAAAC,OAAAR,EAAAM,KAGAN,KCjBAtF,YAAAoF,QAAA,QAAA,QAAA,KAAA,UAAA,MAAA,QAAA,WACA,SAAAW,EAAAlF,EAAAmF,EAAAC,EAAAC,EAAAb,GAEA,GAAAc,KAqEA,OAnEAA,GAAAhB,OAAA,WAEA,GAAApE,GAAAF,EAAAG,OASA,OAPAgF,GAAAI,aAAAC,WAAA,cACAL,EAAAI,aAAAC,WAAA,gBACAL,EAAAI,aAAAC,WAAA,iBACAL,EAAAI,aAAAC,WAAA,cAEAtF,EAAAJ,UAEAI,EAAAI,SAGAgF,EAAAG,QAAA,SAAAC,GAMA,MAJAP,GAAAI,aAAAI,WAAAD,EAAAE,KAAAD,WACAR,EAAAI,aAAAb,aAAAgB,EAAAE,KAAAlB,aACAS,EAAAI,aAAAM,cAAAH,EAAAE,KAAAC,cACAV,EAAAI,aAAAO,WAAAJ,EAAAE,KAAAE,WACAJ,GAGAJ,EAAAS,OAAA,WAEA,MAAAT,GAAAG,SAGAH,EAAAlF,SAAA,WAEA,MAAA+E,GAAAI,aAAAS,eAAA,eACAb,EAAAI,aAAAS,eAAA,iBACAb,EAAAI,aAAAS,eAAA,kBACAb,EAAAI,aAAAS,eAAA,eAGAV,EAAAW,QAAA,WAEA,GAAAL,IACAM,WAAA,gBACAC,UAAA3B,EAAA2B,UACAC,cAAA5B,EAAA4B,cACAC,MAAA7B,EAAAG,OAAA2B,OACAT,cAAAV,EAAAI,aAAAM,cAGA,OAAAX,GAAA1D,KAAA4D,EAAAN,IAAA,gBAAAc,GACAhC,KAAA0B,EAAAS,UADAb,SAEAG,EAAAU,WAGAT,EAAA3B,OAAA,SAAAJ,GAEA,GAAAqC,IACAM,WAAA,WACAC,UAAA3B,EAAA2B,UACAC,cAAA5B,EAAA4B,cACAC,MAAA7B,EAAAG,OAAA2B,OACA9C,SAAAD,EAAA,SACAE,SAAAF,EAAA,SAGA,OAAA2B,GAAA1D,KAAA4D,EAAAN,IAAA,gBAAAc,GACAhC,KAAA0B,EAAAS,UADAb,SAEAG,EAAAU,WAGAT,KAGAnG,YAAAoF,QAAA,mBAAA,KAAA,UACA,SAAAvE,EAAAmF,GAEA,GAAAoB,KAuBA,OArBAA,GAAAC,QAAA,SAAAlH,GAEA,GAAA6F,EAAAI,aAAAS,eAAA,eACAb,EAAAI,aAAAS,eAAA,iBACAb,EAAAI,aAAAS,eAAA,kBACAb,EAAAI,aAAAS,eAAA,cAAA,CAEA,GAAAF,GAAAX,EAAAI,aAAAO,WACApB,EAAAS,EAAAI,aAAAb,YACApF,GAAA+B,QAAAoF,cAAAX,EAAA,IAAApB,EAGA,MAAApF,IAGAiH,EAAAG,cAAA,SAAArE,GAGA,MADA8B,SAAAwC,MAAAtE,GACArC,EAAAK,OAAAA,SAGAkG,KCrGApH,YAAAoF,QAAA,SAAA,KACA,SAAAvE,GAEA,GAAA2G,KAaA,OAXAA,GAAAlB,QAAA,SAAAkB,GAGA,MADAxC,SAAAwC,MAAAA,GACA3G,EAAAK,OAAAsG,IAGAA,EAAAZ,OAAA,WAEA,MAAAY,GAAAlB,SAGAkB,KChBAxH,YAAAoF,QAAA,YACA,WAEA,GAAAqC,KA6BA,OA3BAA,GAAA5B,KAAA,uBACA4B,EAAAT,UAAA,2CACAS,EAAAR,cAAA,2CAEAQ,EAAAjC,QACA,qBACA,mBACA,qBACA,qBAEA,oBACA,kBACA,oBACA,oBAEA,oBACA,kBACA,oBACA,oBAEA,mBACA,iBACA,mBACA,oBAIAiC,KChCAzH,YAAAoF,QAAA,QAAA,YAAA,MACA,SAAAsC,EAAAzB,GAEA,MAAAyB,GAAAzB,EAAAN,IAAA,SAAA,MACAd,OACA8C,SAAA","file":"application.min.js","sourcesContent":["var application = angular.module('application', [\r\n    'ngAnimate',\r\n    'ngAria',\r\n    'ngMaterial',\r\n    'ngMessageFormat',\r\n    'ngMessages',\r\n    'ngResource',\r\n    'ngRoute',\r\n    'ngSanitize',\r\n    'pascalprecht.translate', // angular-translate\r\n    'application.templates', // application templates cache\r\n]);\r\n\r\napplication.config(['$locationProvider', '$routeProvider',\r\n    function($locationProvider, $routeProvider)\r\n    {\r\n        $locationProvider.html5Mode(true)\r\n            .hashPrefix('#!');\r\n\r\n        $routeProvider\r\n            .when('/login', {\r\n                controller: 'LoginController',\r\n                templateUrl: '/templates/login.html',\r\n                resolve: {\r\n                    guest_only: ['$q', 'Auth', function($q, Auth)\r\n                    {\r\n                        var deferred = $q.defer();\r\n                        if (! Auth.isLogged()) {\r\n                            deferred.resolve();\r\n                        } else {\r\n                            deferred.reject('guest_only');\r\n                        }\r\n                        return deferred.promise;\r\n                    }],\r\n                },\r\n            })\r\n            .when('/modules', {\r\n                controller: 'ModulesController',\r\n                templateUrl: '/templates/modules.html',\r\n                resolve: {\r\n                    member_only: ['$q', 'Auth', function($q, Auth)\r\n                    {\r\n                        var deferred = $q.defer();\r\n                        if (Auth.isLogged()) {\r\n                            deferred.resolve();\r\n                        } else {\r\n                            deferred.reject('member_only');\r\n                        }\r\n                        return deferred.promise;\r\n                    }],\r\n                },\r\n            })\r\n            .when('/access_control', {\r\n            })\r\n            .otherwise({\r\n                redirectTo: '/login',\r\n            });\r\n    }]);\r\n\r\napplication.config(['$mdThemingProvider',\r\n    function($mdThemingProvider)\r\n    {\r\n        $mdThemingProvider.theme('default')\r\n            .primaryPalette('indigo')\r\n            .accentPalette('pink')\r\n            .warnPalette('orange')\r\n            .backgroundPalette('grey');\r\n\r\n        $mdThemingProvider.theme('indigo')\r\n            .primaryPalette('indigo')\r\n            .accentPalette('pink')\r\n            .warnPalette('orange')\r\n            .backgroundPalette('grey');\r\n\r\n        $mdThemingProvider.theme('indigoBackground')\r\n            .primaryPalette('indigo')\r\n            .accentPalette('pink')\r\n            .warnPalette('orange')\r\n            .backgroundPalette('indigo');\r\n    }]);\r\n\r\napplication.config(['$translateProvider',\r\n    function($translateProvider)\r\n    {\r\n        $translateProvider.useSanitizeValueStrategy('sanitize');\r\n        $translateProvider.preferredLanguage('en');\r\n    }]);\r\n\r\napplication.config(['$httpProvider',\r\n    function($httpProvider)\r\n    {\r\n        $httpProvider.defaults.headers = {\r\n            common: {\r\n                Accept: 'application/vnd.menggaris.v1+json',\r\n            },\r\n            post: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            put: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            delete: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        };\r\n\r\n        $httpProvider.interceptors.push('AuthInterceptor');\r\n    }]);\r\n\r\napplication.run(['$location', '$rootScope',\r\n    function($location, $rootScope)\r\n    {\r\n        $rootScope.$on('$routeChangeError', function(event, current, previous, rejection)\r\n        {\r\n            switch (rejection) {\r\n                case 'guest_only':\r\n                    $location.path('/modules');\r\n                    break;\r\n                case 'member_only':\r\n                    $location.path('/login');\r\n                    break;\r\n            }\r\n        });\r\n    }]);\r\n","application.config(['$translateProvider',\r\n    function($translateProvider)\r\n    {\r\n        $translateProvider.translations('en', {\r\n            'action_login': 'Log in',\r\n            'action_logout': 'Log out',\r\n\r\n            'label_password': 'Password',\r\n            'label_username': 'Username',\r\n\r\n            'placeholder': 'Placeholder',\r\n\r\n            'title_access_control': 'Access Control',\r\n            'title_arrears_management': 'Arrears Management',\r\n            'title_login': 'Login',\r\n            'title_modules': 'Modules',\r\n            'title_settings': 'Settings',\r\n\r\n            'validation_maxlength_24': 'This field may not be greater than 24 characters.',\r\n            'validation_minlength_4': 'This field must be at least 4 characters.',\r\n            'validation_required': 'This field is required.',\r\n        });\r\n    }]);\r\n","application.config(['$translateProvider',\r\n    function($translateProvider)\r\n    {\r\n        $translateProvider.translations('ms', {\r\n            'title_login': 'Log masuk',\r\n            'label_username': 'Kata nama',\r\n            'label_password': 'Kata kunci',\r\n            'button_login': 'Log masuk',\r\n        });\r\n    }]);\r\n","application.controller('LoginController', ['$location', '$scope', 'Auth',\r\n    function($location, $scope, Auth)\r\n    {\r\n        $scope.credentials = {\r\n            username: '',\r\n            password: '',\r\n        };\r\n\r\n        $scope.login = function(credentials)\r\n        {\r\n            Auth.verify(credentials)\r\n                .then(function (session) {\r\n                    $location.path('/modules');\r\n                });\r\n        };\r\n    }]);\r\n","application.controller('ModulesController', ['$location', '$scope', '$timeout', 'Auth', 'User',\r\n    function($location, $scope, $timeout, Auth, User)\r\n    {\r\n        User.query({\r\n            limit: 3,\r\n            username: '~a%',\r\n        }, function(users)\r\n        {\r\n            console.info(users);\r\n        });\r\n\r\n        $scope.logout = function()\r\n        {\r\n            $timeout(function()\r\n            {\r\n                Auth.forget()\r\n                    .then(function()\r\n                    {\r\n                        $location.path('/login');\r\n                    });\r\n            }, 300);\r\n        };\r\n    }]);\r\n","application.factory('API', ['Settings',\r\n    function(Settings)\r\n    {\r\n        var api = {};\r\n\r\n        api.access_token    = '/api/access_token';\r\n        api.session         = '/api/session';\r\n        api.users           = '/api/users/:user_id';\r\n        api.scopes          = '/api/scopes/{scopes}';\r\n        api.grants          = '/api/grants/{grants}';\r\n        api.clients         = '/api/clients/{clients}';\r\n\r\n        api.get = function(endpoint)\r\n        {\r\n            return Settings.host.concat(api[endpoint]);\r\n        };\r\n\r\n        return api;\r\n    }]);\r\n","application.factory('Auth', ['$http', '$q', '$window', 'API', 'Error', 'Settings',\r\n    function($http, $q, $window, API, Error, Settings)\r\n    {\r\n        var auth = {};\r\n\r\n        auth.forget = function()\r\n        {\r\n            var deferred = $q.defer();\r\n\r\n            $window.localStorage.removeItem('expires_in');\r\n            $window.localStorage.removeItem('access_token');\r\n            $window.localStorage.removeItem('refresh_token');\r\n            $window.localStorage.removeItem('token_type');\r\n\r\n            deferred.resolve();\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        auth.handler = function(response)\r\n        {\r\n            $window.localStorage.expires_in      = response.data.expires_in;\r\n            $window.localStorage.access_token    = response.data.access_token;\r\n            $window.localStorage.refresh_token   = response.data.refresh_token;\r\n            $window.localStorage.token_type      = response.data.token_type;\r\n            return response;\r\n        };\r\n\r\n        auth.handle = function()\r\n        {\r\n            return auth.handler;\r\n        };\r\n\r\n        auth.isLogged = function()\r\n        {\r\n            return $window.localStorage.hasOwnProperty('expires_in') &&\r\n                $window.localStorage.hasOwnProperty('access_token') &&\r\n                $window.localStorage.hasOwnProperty('refresh_token') &&\r\n                $window.localStorage.hasOwnProperty('token_type');\r\n        };\r\n\r\n        auth.refresh = function()\r\n        {\r\n            var data = {\r\n                grant_type: 'refresh_token',\r\n                client_id: Settings.client_id,\r\n                client_secret: Settings.client_secret,\r\n                scope: Settings.scopes.join(),\r\n                refresh_token: $window.localStorage.refresh_token,\r\n            };\r\n\r\n            return $http.post(API.get('access_token'), data)\r\n                .then(auth.handle())\r\n                .catch(Error.handle());\r\n        };\r\n\r\n        auth.verify = function(credentials)\r\n        {\r\n            var data = {\r\n                grant_type: 'password',\r\n                client_id: Settings.client_id,\r\n                client_secret: Settings.client_secret,\r\n                scope: Settings.scopes.join(),\r\n                username: credentials['username'],\r\n                password: credentials['password'],\r\n            };\r\n\r\n            return $http.post(API.get('access_token'), data)\r\n                .then(auth.handle())\r\n                .catch(Error.handle());\r\n        };\r\n\r\n        return auth;\r\n    }]);\r\n\r\napplication.factory('AuthInterceptor', ['$q', '$window',\r\n    function($q, $window)\r\n    {\r\n        var authInterceptor = {};\r\n\r\n        authInterceptor.request = function(config)\r\n        {\r\n            if ($window.localStorage.hasOwnProperty('expires_in') &&\r\n                $window.localStorage.hasOwnProperty('access_token') &&\r\n                $window.localStorage.hasOwnProperty('refresh_token') &&\r\n                $window.localStorage.hasOwnProperty('token_type')) {\r\n\r\n                var token_type = $window.localStorage.token_type;\r\n                var access_token = $window.localStorage.access_token;\r\n                config.headers.Authorization = token_type + ' ' + access_token;\r\n            }\r\n\r\n            return config;\r\n        };\r\n\r\n        authInterceptor.responseError = function(rejection)\r\n        {\r\n            console.error(rejection);\r\n            return $q.reject(reject);\r\n        };\r\n\r\n        return authInterceptor;\r\n    }]);\r\n","application.factory('Error', ['$q',\r\n    function($q)\r\n    {\r\n        var error = {};\r\n\r\n        error.handler = function(error)\r\n        {\r\n            console.error(error);\r\n            return $q.reject(error);\r\n        };\r\n\r\n        error.handle = function()\r\n        {\r\n            return error.handler;\r\n        };\r\n\r\n        return error;\r\n    }])\r\n","application.factory('Settings', [\r\n    function()\r\n    {\r\n        var settings = {};\r\n\r\n        settings.host           = 'http://homestead.app';\r\n        settings.client_id      = '1111111111111111111111111111111111111111';\r\n        settings.client_secret  = 'passwordpasswordpasswordpasswordpassword';\r\n\r\n        settings.scopes = [\r\n            'create_client_data',\r\n            'read_client_data',\r\n            'update_client_data',\r\n            'delete_client_data',\r\n\r\n            'create_grant_data',\r\n            'read_grant_data',\r\n            'update_grant_data',\r\n            'delete_grant_data',\r\n\r\n            'create_scope_data',\r\n            'read_scope_data',\r\n            'update_scope_data',\r\n            'delete_scope_data',\r\n\r\n            'create_user_data',\r\n            'read_user_data',\r\n            'update_user_data',\r\n            'delete_user_data',\r\n        ];\r\n\r\n\r\n        return settings;\r\n    }]);\r\n","application.factory('User', ['$resource', 'API',\r\n    function($resource, API)\r\n    {\r\n        return $resource(API.get('users'), null, {\r\n            query: {\r\n                isArray: false,\r\n            },\r\n        });\r\n    }]);\r\n"],"sourceRoot":"/source/"}